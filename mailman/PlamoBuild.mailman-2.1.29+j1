#!/bin/sh
##############################################################
pkgbase='mailman'
vers='2.1.29+j1'
url="http://mm.poem.co.jp/${pkgbase}-jp/src/${pkgbase}-${vers}.tbz2"
verify=""
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG="--prefix=/usr/lib/mailman
	--without-permcheck
	--with-var-prefix=/var/lib/mailman
	--with-cgi-gid=apache
	--with-mail-gid=mailman
	--with-username=mailman
	--with-groupname=mailman
	--with-python=/usr/bin/python2"
DOCS='INSTALL NEWS NEWS.japan.utf-8 README README-I18N.en README.CONTRIB README.NETSCAPE README.USERAGENT README.japan.utf-8 STYLEGUIDE.txt TODO gnu-COPYING-GPL'
patchfiles=''
compress=txz
##############################################################

MAILMAN_GID=502
MAILMAN_UID=502

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $B
  for patch in $patchfiles ; do
    patch -p1 < $W/$patch
  done

  find . -type f -exec \
    sed -i '1s,^#! \?/usr/bin/\(env \|\)python$,#!/usr/bin/python2,' {} \;

  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export LDFLAGS='-Wl,--as-needed' 
  $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -j3
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  install -d -m755 -v $P/etc/mailman
  ln -sv /usr/lib/mailman/Mailman/mm_cfg.py "$P/etc/mailman/mm_cfg.py"
  chown -R "$MAILMAN_UID":"$MAILMAN_GID" "$P"/{usr/lib/mailman,var/lib/mailman,etc/mailman/*}
  chown www:"$MAILMAN_GID" "$P"/var/lib/mailman/archives/private
  chmod 2770 "$P"/var/lib/mailman/archives/private
  chmod 2755 "$P"/usr/lib/mailman/cgi-bin/*
  chmod 2755 "$P"/usr/lib/mailman/mail/mailman

  install -Dm 755 $W/mailman.profile.sh "$P/etc/profile.d/mailman.sh"

  mkdir -p $P/install
  cat <<EOF >> $P/install/initpkg

if ! grep mailman /etc/passwd > /dev/null 2>&1 ; then
  groupadd -g $MAILMAN_GID mailman
  useradd -u $MAILMAN_UID -g $MAILMAN_GID -d /var/lib/mailman mailman
fi

/usr/lib/mailman/bin/check_perms -f

EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
