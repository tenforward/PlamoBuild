#!/bin/sh

java_vers=1.6.0_30
build=P1
arch=x86_64

if [ "$arch" = "x86_64" ]; then
    arch="x86_64"
    jarch="amd64"
    libdir="lib64"
    ext="txz"
else
    arch="i386"
    jarch="i386"
    libdir="lib"
    ext="tgz"
fi

java_dir=`pwd`/jre$java_vers

if [ ! -d $java_dir ]; then
  echo "download proper jre(Java Runtime Environment) form www.java.com"
  echo "(ex: jre-6u18-linux-i586.bin)and run it to install jre in "
  echo "  the same directory ( ./jre$java_vers)"
  exit
fi

P=`pwd`/work
if [ -d $P ]; then
  rm -rf $P && mkdir -p $P
fi

mkdir -p $P/install
mkdir -p $P/usr/share/doc/jre-$java_vers

cd $P
mkdir -p usr/java
cp -a $java_dir usr/java

mkdir -p usr/share

( pushd usr/java ; ln -sf jre$java_vers jre )
( pushd usr/java ; mv jre/man ../share/ )
( cd usr/share/man ; find . -name "*.1" -exec gzip {} \; )

mkdir -p etc/profile.d
cat <<"EOF" > etc/profile.d/jre.csh
# JAVA variables
setenv JAVA_HOME /usr/java/jre
if ($?PATH) then
  set path = ( $path $JAVA_HOME/bin  )
else
  set path = ( /bin /usr/bin $JAVA_HOME/bin )
endif
EOF
cat <<"EOF" > etc/profile.d/jre.sh
# JAVA variables
export JAVA_HOME=/usr/java/jre
if [ "$PATH.x" != ".x" ]; then
    PATH=$PATH:$JAVA_HOME/bin
else
    PATH=/bin:/usr/bin:$JAVA_HOME/bin
fi

EOF


cat <<EOF > ./install/initpkg
echo "jre is looking for firefox"
if [ -d "/usr/$libdir/mozilla/plugins" ]; then
  echo "linking jre plugin into /usr/$libdir/mozillax/plugins/"
  ( cd /usr/${libdir}/mozilla/plugins ; ln -sf /usr/java/jre/lib/${jarch}/libnpjp2.so libnpjp2.so )
fi
EOF

cp ../$0 usr/share/doc/jre-$java_vers/$0

chown -R root.root *
/sbin/makepkg ../jre-"$java_vers"-$arch-$build.$ext
