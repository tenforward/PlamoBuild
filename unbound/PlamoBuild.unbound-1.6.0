#!/bin/sh
##############################################################
pkgbase='unbound'
vers='1.6.0'
url="http://www.unbound.net/downloads/unbound-${vers}.tar.gz"
arch=`uname -m`
build=P3
src="${pkgbase}-${vers}"
OPT_CONFIG="--disable-static --with-pidfile=/var/run/unbound.pid"
DOCS='LICENSE README'
patchfiles=''
compress=txz
unbound_user="unbound"
##############################################################

source /usr/share/plamobuild_functions.sh

# for Plamo-6.x
if [ $arch = "x86_64" ]; then
  libdir="lib64"
else
  libdir="lib"
fi

# このスクリプトで使う1文字変数の意味
# 
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi

    cd $B
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]}
    
    if [ $? != 0 ]; then
	echo "configure error. $0 script stop"
	exit 255
    fi
fi
    
if [ $opt_build -eq 1 ] ; then
    cd $B
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
	echo "build error. $0 script stop"
	exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  mkdir -p $P/usr/bin
  mv -v $P/usr/sbin/unbound-host $P/usr/bin/unbound-host

  # We copy default unbound.conf to $docdir
  mkdir -p $P/usr/share/doc/$src
  mv -v $P/etc/unbound/unbound.conf $P/usr/share/doc/$src/unbound.conf

  chown unbound:unbound $P/etc/unbound
  install -Dm644 $W/unbound.conf $P/etc/unbound/unbound.conf.dist
  mkdir -p $P/install
  cat <<EOF >> $P/install/initpkg
if ! id unbound > /dev/null 2>&1 ; then
  echo "You must add \"unbound\" user and group"
fi
if [ ! -f /etc/unbound/unbound.conf ]; then
  cp /etc/unbound/unbound.conf.dist /etc/unbound/unbound.conf
fi
EOF

  install -Dm644 $W/unbound.init $P/etc/rc.d/init.d/unbound

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
