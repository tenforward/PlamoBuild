#!/bin/sh
##############################################################
pkgbase="lxd"
vers="2.6.2"
url="https://linuxcontainers.org/downloads/lxd/lxd-${vers}.tar.gz"
arch=`uname -m`
build=P1
src="lxd-${vers}"
OPT_CONFIG='--disable-static --enable-shared'
DOCS='AUTHORS COPYING README.md CONTRIBUTING.md'
patchfiles=''
compress=txz
##############################################################

source /usr/lib/setup/plamobuild_functions.sh

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B ;
######################################################################
#  copy sources into build directory, patch and make in the build dir
######################################################################
    cd $B
    for patch in $patchfiles ; do
       patch -p1 < $W/$patch
    done

    # put in the stuff under the GOPATH under the golang rule
    if [ -d src/github.com/lxc/lxd ]; then
        rm -rf src/github.com/lxc/lxd
    else
        mkdir -p src/github.com/lxc/
    fi
    cp -a $W/lxd-${vers} src/github.com/lxc/lxd

    # remove unnecessary static link
    rm src/github.com/lxc/lxd/dist/src/github.com/lxc/lxd

    # copy dependent sources including lxd source archive to src
    rsync -a src/github.com/lxc/lxd/dist/src/ src
    rm -rf src/github.com/lxc/lxd/dist

fi

if [ $opt_build -eq 1 ] ; then
    export GOPATH=$B
    cd $B/src/github.com/lxc/lxd
    make
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
    make build-mo
    if [ $? != 0 ]; then
        echo "build-mo error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then

  if [ `id -u` -ne 0 ] ; then
    read -p "Do you want to package as root? [y/N] " ans
    if [ "x$ans" == "xY" -o "x$ans" == "xy" ] ; then
      cd $W ; /bin/su -c "$0 package" ; exit
    fi
  fi
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  if [ -d $C ] ; then rm -rf $C ; fi ; mkdir -p $C
  touch $W/i.st ; sleep 1
  cd $B

  # bin
  install -D -m755 bin/lxd $P/usr/bin/lxd
  install -D -m755 bin/lxc $P/usr/bin/lxc
  install -D -m755 bin/fuidshift $P/usr/bin/fuidshift

  # message
  install -D -m644 src/github.com/lxc/lxd/po/ja.mo $P/usr/share/locale/ja/LC_MESSAGES/lxd.mo

  # directory
  install -d $P/var/log/lxd
  install -d $P/var/lib/lxd

  # init file
  install -D -m755 $W/lxd.init $P/etc/rc.d/init.d/lxd

  #
  install -D -m644 src/github.com/lxc/lxd/config/bash/lxd-client \
          $P/usr/share/bash-completion/completions/lxc

  # initpkg
  mkdir -p $P/install
  cat > $P/install/initpkg <<EOF
groupadd -f -r lxd
usermod -v 100000-165536 -w 100000-165536 root
EOF


################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
    install_tweak

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
