#! /bin/sh

### BEGIN INIT INFO
# Short-Description:    Container hypervisor based on LXC
# Description:          Container hypervisor based on LXC
# Provides:             lxd
# Required-Start:       $remote_fs
# Required-Stop:        $remote_fs
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
### END INIT INFO

DAEMON=/usr/bin/lxd
NAME=lxd
DESC="Container hypervisor based on LXC"
PIDFILE=/var/run/lxd.pid
LIBDIR=
ARCH=`uname -m`
if test $ARCH = "x86_64" ; then
    LIBDIR=lib64
else
    LIBDIR=lib
fi

test ! -r /lib/lsb/init-functions || . /lib/lsb/init-functions

test -f ${DAEMON} || exit 0

set -e

case "$1" in
    start)
        echo -n "Starting $DESC: "
        ulimit -n 65536
        [ -e /etc/environment ] && . /etc/environment
        ${DAEMON} --group lxd --logfile=/var/log/lxd/lxd.log > /dev/null 2>&1 &
        if test $? -eq 0; then

            # Wait for the unix socket
            for i in $(seq 30); do
                lxc finger --force-local >/dev/null 2>&1 && break
                sleep 1
            done

            if test -e /var/lib/lxd/.setup_mode ; then
                lxd init --auto
                sh /usr/${LIBDIR}/lxd/lxd-setup
                rm -f /var/lib/lxd/.setup_mode
                $0 stop
                exec $0 start
            else
                ${DAEMON} waitready --timeout=30
            fi

            echo "done."
        else
            if pgrep lxd >/dev/null 2>&1; then
                echo "(failed)."
                exit 1
            else
                echo "${DAEMON} already running."
                exit 0
            fi
        fi


        exit 0
    ;;

    stop)
        echo -n "Stopping $DESC: "
        killall ${DAEMON}
        if test $? -eq 0 ; then
            echo "done."
        else
            echo "failed."
	    exit 1
        fi
	exit 0
    ;;

    status)
        pgrep ${NAME} > /dev/null 2>&1
        if test $? -eq 0 ; then
            echo "${NAME} is running."
        else
            echo "${NAME} is NOT running."
            exit 1
        fi
    ;;

    restart|force-reload)
        $0 stop
        exec $0 start
    ;;

    *)
        echo "Usage: $0 {start|stop|restart|force-reload}" 1>&2
        exit 1
    ;;
esac
