#!/bin/sh
##############################################################
pkgbase="netcat_openbsd"
vers="1.206"
urls=(http://ftp.debian.org/debian/pool/main/n/netcat-openbsd/netcat-openbsd_${vers}.orig.tar.gz
      http://ftp.debian.org/debian/pool/main/n/netcat-openbsd/netcat-openbsd_${vers}-1.debian.tar.xz)
verify=""
digest=""
arch=`uname -m`
build=B1
src="netcat-openbsd-${vers}"
OPT_CONFIG="--disable-static --enable-shared"
DOCS=""
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    for url in ${urls}
    do
	if [ ! -f ${url##*/} ]; then
	    wget $url
	fi
	tar xvf ${url##*/}
    done
fi


if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  out of tree build. patch apply in src dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
    cd $B
    for patch in $patchfiles ; do
        patch -p1 < $W/$patch
    done
    for p in $(ls $W/debian/patches)
    do
	patch -p1 -i $W/debian/patches/$p
    done
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make -j3 CFLAGS="$CFLAGS -DDEBIAN_VERSION=\"\\\"1\\\"\" -I/usr/include/libbsd" LDFLAGS="$LDFLAGS -lbsd"
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  install -Dm0755 -v nc $P/usr/bin/nc
  ln -s nc $P/usr/bin/netcat
  install -Dm0644 -v nc.1 $P/usr/share/man/man1/nc.1

  for p in $(ls $W/debian/patches)
  do
      install -Dm0644 -v $W/debian/patches/$p $docdir/$src/$p
  done

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
