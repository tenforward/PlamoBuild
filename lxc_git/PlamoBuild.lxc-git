#!/bin/sh
##############################################################
pkgbase='lxc'
vers=""
template_vers="3.0.4"
url="https://github.com/lxc/lxc.git"
commitid="6821739c3c2db7d5ac94d2c30bf19511241db5d2"
template="https://linuxcontainers.org/downloads/lxc/lxc-templates-${template_vers}.tar.gz"
verify=""
template_verify="${template}.asc"
arch=`uname -m`
build=B1
src="${pkgbase}"
template_src="lxc-templates-${template_vers}"
OPT_CONFIG="--enable-static --enable-shared
            --with-runtime-path=/run
	    --enable-pam
	    --disable-bash
	    --without-systemdsystemunitdir"
DOCS='AUTHORS COPYING ChangeLog INSTALL MAINTAINERS NEWS README'
patchfiles=''
#template_patchfiles="plamo_initpkg.patch"
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi

###
#version = date.commitid
###
if [ $opt_download -ne 1 ]; then
    pushd $S
    vers=$(TZ=UTC git show -s --pretty=%cd --date=format-local:%Y%m%d HEAD).$(git rev-parse --short HEAD)
    pkg=${pkgbase}-${vers}-${arch}-${build}
    popd
fi

if [ $opt_download -eq 1 ] ; then
  download_sources
  if [ ! -f ${template##*/} ]; then
    wget $template
  fi
  if [ ! -f ${template_verify##*/} ]; then
    wget $template_verify
  fi
  gpg --verify ${template_verify##*/}
  if [ $? -eq 0 ]; then
      rm -rf $template_src
      tar xvf ${template##*/}
  else
      exit 255
  fi
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $S
  for patch in $patchfiles ; do
    if [ ! -f .${patch} ]; then
      patch -p1 < $W/$patch
      touch .${patch}
    fi
  done
  if [ -f autogen.sh ] ; then
    sh ./autogen.sh
  fi
  if [ ! -f .init_script_patched ]; then
      sed -i -e 's/log_daemon_msg/log_info_msg/g' \
          -e '/@LIBEXECDIR@/a \ \ \ \ evaluate_retval' config/init/sysvinit/lxc-net.in
      sed -i -e 's/log_daemon_msg/log_info_msg/g' \
          -e '/@LIBEXECDIR@/a \ \ \ \ evaluate_retval' config/init/sysvinit/lxc-containers.in
      touch .init_script_patched
  fi

  cd $B
  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export CFLAGS="$CFLAGS"  
  export LDFLAGS='-Wl,--as-needed' 
  $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi

  cd $W
  cp -a $template_src template_build
  cd $W/template_build
  for p in $template_patchfiles
  do
      patch -p1 -i $W/$p
  done
  ./autogen.sh
  ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export CFLAGS="$CFLAGS"  
  export LDFLAGS="$LDFLAGS -Wl,--as-needed"
  make -j3
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
  cd $W/template_build
  make
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export CFLAGS="$CFLAGS"  
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  install -Dm644 -v $W/lxc-net $P/etc/sysconfig/lxc-net

  for i in $(seq 0 6)
  do
    install -dm755 -v $P/etc/rc.d/rc"$i".d
    case $i in
      0|1|6)
	ln -sfv ../init.d/lxc-net $P/etc/rc.d/rc"$i".d/K01lxc-net
	ln -sfv ../init.d/lxc $P/etc/rc.d/rc"$i".d/K01lxc
	;;
      2|3|4|5)
	ln -sfv ../init.d/lxc-net $P/etc/rc.d/rc"$i".d/S98lxc-net
	ln -sfv ../init.d/lxc $P/etc/rc.d/rc"$i".d/S99lxc
	;;
    esac
  done

  # We need not Korean man pages
  rm -rfv $P/usr/share/man/ko

  cd $W/template_build
  make install DESTDIR=$P

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

  for p in $template_patchfiles
  do
      install -Dm644 -v $W/$p $docdir/$src/$p
  done

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
